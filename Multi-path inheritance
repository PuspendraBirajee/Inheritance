#include<iostream>
using namespace std;
class a
{
	public:
	a()
	{
		cout<<"class a constructor is invoked"<<endl;
	}
	~a()
	{
		cout<<"class a destructor is invoked"<<endl;
	}
};
class b:public a
{
	public:
	b()
	{
	    cout<<"class b constructor is invoked"<<endl;	
	}
	~b()
	{
		cout<<"class b desstructor is invoked"<<endl;
	}
};

class c:public a
{
	public:
	c()
	{
	    cout<<"class c constructor is invoked"<<endl;	
	}
	~c()
	{
		cout<<"class c desstructor is invoked"<<endl;
	}
};

class d: virtual public b,c                                                                                                                       
{
	public:
	d()
	{
	    cout<<"class d constructor is invoked"<<endl;	
	}
	~d()
	{
		cout<<"class d desstructor is invoked"<<endl;
	}
};
int main()
{
//	b B;
//	c C;
//	B;
//	C;
    d D;
//    D;
}
